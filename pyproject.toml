[tool.mypy]
plugins = ["pydantic.mypy"]
exclude=[".venv",  ".ruff_cache", ".mypy_cache", "tests"]
python_version = "3.X"
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true
ignore_missing_imports = true
install_types = true           # Automatically install missing type stubs
non_interactive = true         # Install stubs without prompting

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
line-length = 100
target-version = "py3X"
lint.select = ["ALL"]
lint.ignore = [
    "ANN",      # Disable ALL type warnings (handled by mypy)
    "D100",     # "Missing docstring in public module"
    "D101",     # "Missing docstring in public class"
    "D102",     # "Missing docstring in public method"
    "D104",     # "Missing docstring in public package"
    "D105",     # "Missing docstring in magic method"
    "D106",     # "Missing docstring in public nested class"
    "D107",     # "Missing docstring in `__init__`"
    "D203",     # "1 blank line required before class docstring"
    "D213",     # "Multi-line docstring summary should start at the second line"
    "EM101",    # "Exception must not use a string literal, assign to variable first"
    "EM102",    # "Exception must not use an f-string literal, assign to variable first"
    "G004",     # "Logging statement uses f-string"
    "SIM108",   # "Use ternary operator ...". Ternary is harmful for readability in some cases.
    "TRY003",   # "Avoid specifying long messages outside the exception class"
    "COM812",   # "Checks for the absence of trailing commas."
    "ISC001",   # "Checks for implicitly concatenated strings on a single line."
    "FIX002",   # "Line contains TODO, consider resolving the issue"
    "TD003",    # "Missing issue link on the line following this TODO"
    "FBT001",   # Boolean-typed positional argument in function definition
    "PLR0913",  # Too many arguments in function definition (7 > 5)
    "SLF001",   # Private member accessed: `_initialize`
]